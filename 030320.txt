…or create a new repository on the command line

echo "# jenkins-" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/vinay-kumar762/jenkins-.git
git push -u origin master

…or push an existing repository from the command line
git remote add origin https://github.com/vinay-kumar762/jenkins-.git
git push -u origin master

or import code from another repository
You can initialize this repository with code from a Subversion, Mercurial, or TFS project.

git config --global user.email "vinayqae05@gmail.com"
git config --global user.name "vinay-kumar762"

============================================================================
…or create a new repository on the command line

echo "# Testgit" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/vinay-kumar762/Testgit.git
git push -u origin master

…or push an existing repository from the command line

git remote add origin https://github.com/vinay-kumar762/Testgit.git
git push -u origin master

…or import code from another repository
You can initialize this repository with code from a Subversion, Mercurial, or TFS project.


=====================================
What is git ?
Git is the open source
Distributed version control system.
Distributed means every one have thier own copy which will have local repository.
Trunk based Development ---
commit ---Means ---save 
scm- Software configuration managment 
     Source code Managment 
     
Repositaroy is where you have your codes.
Git is the local repository
Git-Hub is remote repository
Git :-
Git is a revision control system used to track changes in computer files. It's a tool manage your code & file history while cordinating work remotly on those files with others.

Working Directory - add =Staging - commit=local .git -push= remote {git-hub}
                      ---------------- pull -----------------------
					  
Github:--

Github is a hosting service for git repositories.Git is the tool,While Github is the service to use git.

Git & Github Integration :-
1. Branching
2.Merging 

https://www.youtube.com/watch?v=HCeBd5GKNO8   *******

----------------------------------------------------------------------------

Repositaroy is where you have your codes.

================================================

Getting & Creating Projects
Command======================================Description
git init====================================Initialize a  local Gitrepository
git clone ssh://git@github.com/[username]/[repository-name].git===========Create a local copy of a remote repository
Basic Snapshotting
Command=============================================Description
git status==========================================Check status
git add [file-name.txt]============================Add a file to the staging area
git add -A=========================================Add all new and changed files to the staging area
git commit -m "[commit message]"=============================Commit changes
git rm -r [file-name.txt]=================================Remove a file (or folder)
-----------------------------------------------------------------------------------------------------------------------------------
Branching & Merging
Command=====================================================Description
git branch=================================================List branches (the asterisk denotes the current branch)
git branch -a============================================List all branches (local and remote)
git branch [branch name]=====================================Create a new branch
git branch -d [branch name]==================================Delete a branch
git push origin --delete [branch name]================================Delete a remote branch
git checkout -b [branch name]=======================================Create a new branch and switch to it
git checkout -b [branch name] origin/[branch name]========================Clone a remote branch and switch to it
git branch -m [old branch name] [new branch name]===========================Rename a local branch
git checkout [branch name]=================================================Switch to a branch
git checkout -==============================================================Switch to the branch last checked out
git checkout -- [file-name.txt]=========================================Discard changes to a file
git merge [branch name]=================================================Merge a branch into the active branch
git merge [source branch] [target branch]===============================Merge a branch into a target branch
git stash=============================================================Stash changes in a dirty working directory
git stash clear======================================================Remove all stashed entries
------------------------------------------------------------------------------------------------------------------------------------
Sharing & Updating Projects
Command====================================================================Description
git push origin [branch name]============================================Push a branch to your remote repository
git push -u origin [branch name]===========================================Push changes to remote repository (and remember the branch)
git push=======================================================================Push changes to remote repository (remembered branch)
git push origin --delete [branch name]===========================================Delete a remote branch
git pull==========================================================================Update local repository to the newest commit
git pull origin [branch name]===================================================Pull changes from remote repository
git remote add origin ssh://git@github.com/[username]/[repository-name].git=============================Add a remote repository
git remote set-url origin ssh://git@github.com/[username]/[repository-name].git================================Set a repository's origin branch to SSH
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Inspection & Comparison
Command================================================================================Description
git log=================================================================================View changes
git log --summary====================================================================View changes (detailed)
git log --oneline====================================================================View changes (briefly)
git diff [source branch] [target branch]====================================================Preview changes before merging
